{"type":"group","name":"consolidatedmonkcombos modified","enabled":true,"id":1,"items":[{"type":"function","name":"- READ ME -","enabled":true,"id":7,"code":"/*\n\nCONSOLIDATED MONK COMBOS (Modified) v1.2\nOriginal package created by Keorin\nModifications made by Kaios\n\nAll attacks are for Tekura monk only. This package does not have anything in place for Shikudo.\n\nThe basic idea is that the keys used in the alias roughly correspond to the shape of a person on the keyboard:\n\n          [7][8][9]                              [rndhouse][head ][jump kick]\n          [4][5][6]        corresponds to        [left arm][torso][right arm]  \n          [1][2][3]                              [left leg][sweep][right leg]\n          [ 0 ]                                  [clear queue]\n\nThe combo aliases themselves will account for being in Blackout, and not attack should you attempt to while it is afflicted. They will also account for being afflicted with Aeon and use the attacks with less commands accordingly.\n\n\nList of Commands\n----------------\nMONKSET : Displays the current settings.\n\nMONKPK : Enables or Disables the Punch or Kick alias, depending on which one happens to be enabled at the time.\n\nMONKCOMBOS : Use this alias to make changes to the numkey tables but remember to replace those changes in the onLoad as well.\n\n\nTo-do List\n----------\n- Need to account for Retardation vibes similar to how Aeon is being accounted for.\n\n\nCredits\n-------\nFull credit to Keorin for the creation of her original Consolidated Monk Combos package for which this was the basis. Thank you!\n\n*/"},{"type":"function","name":"onLoad","enabled":true,"id":12,"code":"'use strict';\n\n///////////////////////////////////////////////\n// Variable Declarations\n\nmonkVal1 = undefined;\nmonkVal2 = undefined;\nmonkVal3 = undefined;\nmonkVal4 = undefined;\nmonkVal5 = undefined;\n\n// Full Combo Tables\nclient.kickTableFull = {8:`wwk`, 5:`sdk`, 4:`mnk left`, 6:`mnk right`, 1:`snk left`, 3:`snk right`, 2:`swk`, 7:`rhk`, 9:`jpk`};\n\nclient.limbTableFull = {8:`ucp`, 5:`hkp`, 4:`spp left`, 6:`spp right`, 1:`hfp left`, 3:`hfp right`, 7:`jbp arms`, 9:`jbp head`};\n\nclient.stanceTable = {b:`brs`, c:`cts`, d:`drs`, e:`egs`, h:`hrs`, r:`rts`, s:`scs`};\n\nclient.commandTable = {a:`mind command apply restoration to arms`, e:`mind command apply restoration to ears`, h:`mind command apply restoration to head`, r:`mind command restore`, t:`mind command apply restoration to torso`};\n\n// Punch Table\nclient.limbTable = {8:`ucp @tar`, 5:`hkp @tar`, 4:`spp @tar left`, 6:`spp @tar right`, 1:`hfp @tar left`, 3:`hfp @tar right`, 7:`jbp @tar arms`, 9:`jbp @tar head`};\n\n// Kick Table\nclient.kickTable = {8:`wwk @tar`, 5:`sdk @tar`, 4:`mnk @tar left`, 6:`mnk @tar right`, 1:`snk @tar left`, 3:`snk @tar right`, 2:`swk @tar`, 7:`rhk @tar`, 9:`jpk @tar`};\n\n\n///////////////////////////////////////////////\n// Function Declarations\n\n// Without Aeon Full Combo\nmonkComboFull = function() {\n    \n\t// If Stance AND Command are used\n\tif (typeof client.stanceTable[monkVal4] !== 'undefined' && typeof client.commandTable[monkVal5] !== 'undefined') {\n        send_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}/${client.stanceTable[monkVal4]}/${client.commandTable[monkVal5]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n        monkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n\t\tmonkVal3 = undefined;\n\t\tmonkVal4 = undefined;\n\t\tmonkVal5 = undefined;\n        \n    // If Stance used\n    } else if (typeof client.stanceTable[monkVal4] !== 'undefined') {\n        send_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}/${client.stanceTable[monkVal4]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n        monkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n\t\tmonkVal3 = undefined;\n\t\tmonkVal4 = undefined;\n\t\tmonkVal5 = undefined;\n    \n    // If Stance AND Command are NOT used\n    } else {\n        send_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n        monkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n\t\tmonkVal3 = undefined;\n\t\tmonkVal4 = undefined;\n\t\tmonkVal5 = undefined;\n\t};\n};\n\n// With Aeon Full Combo\nmonkComboAeonFull = function() {\n    \n\t// If Stance AND Command are used\n\tif (typeof client.stanceTable[monkVal4] !== 'undefined' && typeof client.commandTable[monkVal5] !== 'undefined') {\n        send_command(`setalias mcombo stand/stand/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}/${client.stanceTable[monkVal4]}/${client.commandTable[monkVal5]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n        monkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n\t\tmonkVal3 = undefined;\n\t\tmonkVal4 = undefined;\n\t\tmonkVal5 = undefined;\n        \n    // If Stance used\n    } else if (typeof client.stanceTable[monkVal4] !== 'undefined') {\n        send_command(`setalias mcombo stand/stand/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}/${client.stanceTable[monkVal4]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \n    // If Stance AND Command are NOT used\n    } else {\n        send_command(`setalias mcombo stand/stand/combo @tar ${client.kickTableFull[monkVal1]} ${client.limbTableFull[monkVal2]} ${client.limbTableFull[monkVal3]}`);\n        send_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n        monkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n\t\tmonkVal3 = undefined;\n\t\tmonkVal4 = undefined;\n\t\tmonkVal5 = undefined;\n\t};\n};\n\n// Without Aeon Punch\nmonkComboPunch = function () {\n    \n    // Two Punches\n    if (typeof client.limbTable[monkVal2] !== 'undefined') {\n    \tsend_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/stand/${client.limbTable[monkVal1]}/${client.limbTable[monkVal2]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n        \n    // One Punch\n    } else {\n        send_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/stand/${client.limbTable[monkVal1]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n    };\n};\n\n// With Aeon Punch\nmonkComboPunchAeon = function () {\n    \n    // Two Punches\n    if (typeof client.limbTable[monkVal2] !== 'undefined') {\n    \tsend_command(`setalias mcombo stand/stand/${client.limbTable[monkVal1]}/${client.limbTable[monkVal2]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n        \n    // One Punch\n    } else {\n        send_command(`setalias mcombo stand/stand/${client.limbTable[monkVal1]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n    };\n};\n\n// Without Aeon Kick\nmonkComboKick = function () {\n    \n    // Kick/Punch\n    if (typeof client.kickTable[monkVal2] !== 'undefined') {\n    \tsend_command(`setalias mcombo stand/deaf/blind/insomnia/toughness/weathering/resistance/stand/${client.kickTable[monkVal1]}/${client.limbTable[monkVal2]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n        monkVal2 = undefined;\n        \n    // Kick\n    } else {\n        send_command(`setalias mcombo stand/stand/${client.kickTable[monkVal1]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n    };\n};\n\n// With Aeon Kick\nmonkComboKickAeon = function () {\n    \n    // Kick/Punch\n    if (typeof client.kickTable[monkVal2] !== 'undefined') {\n    \tsend_command(`setalias mcombo stand/stand/${client.kickTable[monkVal1]}/${client.limbTable[monkVal2]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n        monkVal2 = undefined;\n        \n    // Kick\n    } else {\n        send_command(`setalias mcombo stand/stand/${client.kickTable[monkVal1]}`);\n\t\tsend_command(\"QUEUE ADDCLEAR EQBAL mcombo\");\n    \tmonkVal1 = undefined;\n\t\tmonkVal2 = undefined;\n    };\n};\n\n\n///////////////////////////////////////////////\n// Load Status\n\n// Enable/Disable Punch or Kick Alias\nif (client.get_variable(\"monkKickPunch\")) {\n    monkKickPunch = client.get_variable(\"monkKickPunch\");\n    if (monkKickPunch === \"PUNCH\") {\n    \tdisplay_notice(`MONK COMBOS: LOAD SUCCESS! Alias 'Punch' is enabled!`, \"gold\", \"navy\");\n        //Enable Punch Alias\n        reflex_enable(reflex_find_by_name(\"alias\", \"Punch\", true, false, \"consolidatedmonkcombos modified\"));\n        //Disable Kick Alias\n        reflex_disable(reflex_find_by_name(\"alias\", \"Kick\", true, false, \"consolidatedmonkcombos modified\"));\n    } else if (monkKickPunch === \"KICK\") {\n        display_notice(`MONK COMBOS: LOAD SUCCESS! Alias 'Kick' is enabled!`, \"gold\", \"navy\");\n        //Enable Kick Alias\n        reflex_enable(reflex_find_by_name(\"alias\", \"Kick\", true, false, \"consolidatedmonkcombos modified\"));\n        //Disable Punch Alias\n        reflex_disable(reflex_find_by_name(\"alias\", \"Punch\", true, false, \"consolidatedmonkcombos modified\"));\n    };\n} else {\n    monkKickPunch = \"PUNCH\";\n    client.set_variable(\"monkKickPunch\", \"PUNCH\");\n\tdisplay_notice(`MONK COMBOS: LOAD SUCCESS! Alias 'Punch' enabled by default! Alias 'Kick' disabled.`, \"gold\", \"navy\");\n    //Enable Punch Alias\n    reflex_enable(reflex_find_by_name(\"alias\", \"Punch\", true, false, \"consolidatedmonkcombos modified\"));\n    //Disable Kick Alias\n    reflex_disable(reflex_find_by_name(\"alias\", \"Kick\", true, false, \"consolidatedmonkcombos modified\"));\n};"},{"type":"alias","name":"Full Combo","enabled":true,"id":11,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nmonkVal1 = parseInt(args[1]);\nmonkVal2 = parseInt(args[2]);\nmonkVal3 = parseInt(args[3]);\nmonkVal4 = args[4];\nmonkVal5 = args[5];\n\n// If No Blackout afflicted\nif (!('blackout' in GMCP.Afflictions)) {\n    \n    // If No Aeon afflicted\n    if (!('aeon' in GMCP.Afflictions)) {\n        monkComboFull();\n        \n    // If Aeon afflicted \n    } else if ('aeon' in GMCP.Afflictions) {\n        monkComboAeonFull();\n    };\n\n// If Blacked out\n} else if ('blackout' in GMCP.Afflictions) {\n    display_notice(\"YOU ARE BLACKED OUT DUMMY! WHAT ARE YOU SWINGING AT?\", \"black\", \"pink\");\n};"}],"text":"^(8|5|4|6|1|3|2|7|9)(8|5|4|6|1|3|7|9)(8|5|4|6|1|3|7|9)(b|c|d|e|h|r|s?)(a|e|h|r|t?)$"},{"type":"alias","name":"Punch","enabled":true,"id":9,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nmonkVal1 = parseInt(args[1]);\nmonkVal2 = parseInt(args[2]);\n\n// If No Blackout\nif (!('blackout' in GMCP.Afflictions)) {\n\n\t//No Aeon\n\tif (!('aeon' in GMCP.Afflictions)) {\n        monkComboPunch();\n        \n\t//With Aeon\n    } else {\n\t\tmonkComboPunchAeon();\n\t};\n    \n// If Blacked out\n} else if ('blackout' in GMCP.Afflictions) {\n    display_notice(\"YOU ARE BLACKED OUT DUMMY! WHAT ARE YOU SWINGING AT?\", \"black\", \"pink\");\n};"}],"text":"^(8|5|4|6|1|3|7|9)(8|5|4|6|1|3|7|9?)$"},{"type":"alias","name":"Kick","enabled":false,"id":10,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nmonkVal1 = parseInt(args[1]);\nmonkVal2 = parseInt(args[2]);\n\n// If No Blackout\nif (!('blackout' in GMCP.Afflictions)) {\n\n\t//No Aeon\n\tif (!('aeon' in GMCP.Afflictions)) {\n        monkComboKick();\n        \n\t//With Aeon\n    } else {\n\t\tmonkComboKickAeon();\n\t};\n    \n// If Blacked out\n} else if ('blackout' in GMCP.Afflictions) {\n    display_notice(\"YOU ARE BLACKED OUT DUMMY! WHAT ARE YOU SWINGING AT?\", \"black\", \"pink\");\n};"}],"text":"^(8|5|4|6|1|3|2|7|9)(8|5|4|6|1|3|7|9?)$"},{"type":"keybind","name":"","enabled":true,"id":8,"key":96,"actions":[{"action":"script","script":"'use strict';\n\nsend_command(\"CLEARQUEUE ALL\", true);"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"alias","name":"SettingsDisplay","enabled":true,"id":14,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\n// Display if Kick or Punch Enabled\nif (monkKickPunch === \"KICK\") {\n    print(`\\nCONSOLIDATED MONK COMBOS\\n-----------------------------------\\n `);\n\tprint(`ALIAS ENABLED: Kick\\n `);\n} else if (monkKickPunch === \"PUNCH\") {\n    print(`\\nCONSOLIDATED MONK COMBOS\\n-----------------------------------\\n `);\n\tprint(`ALIAS ENABLED: Punch\\n `);\n};\n\n// Display Full Combo Kick Table (Full Combo Alias)\nlet stringTable1 = JSON.stringify(client.kickTableFull);\nprint(`Kick Table Full - ${stringTable1.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);\n\n// Display Full Combo Limb Table (Full Combo Alias)\nlet stringTable2 = JSON.stringify(client.limbTableFull);\nprint(`Limb Table Full - ${stringTable2.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);\n\n// Display Stance Table (Full Combo Alias)\nlet stringTable3 = JSON.stringify(client.stanceTable);\nprint(`Stance Table - ${stringTable3.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);\n\n// Display Command Table (Full Combo Alias)\nlet stringTable4 = JSON.stringify(client.commandTable);\nprint(`Command Table - ${stringTable4.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);\n\n// Display Punch Table (Punch Alias)\nlet stringTable5 = JSON.stringify(client.limbTable);\nprint(`Punch Table - ${stringTable5.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);\n\n// Display Kick Table (Kick Alias)\nlet stringTable6 = JSON.stringify(client.kickTable);\nprint(`Kick Table - ${stringTable6.toString().replace(/\"/g , '').replace(/,/g , ', ').replace(/{/g , '').replace(/}/g , '')}\\n `);"}],"text":"monkset"},{"type":"alias","name":"PunchKick Enable/Disable","enabled":true,"id":13,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nif (monkKickPunch === \"KICK\") {\n    monkKickPunch = \"PUNCH\";\n    client.set_variable(\"monkKickPunch\", \"PUNCH\");\n\tdisplay_notice(`MONK COMBOS: Alias 'Punch' is now enabled!`, \"gold\", \"navy\");\n    //Enable Punch Alias\n\treflex_enable(reflex_find_by_name(\"alias\", \"Punch\", true, false, \"consolidatedmonkcombos modified\"));\n\t//Disable Kick Alias\n\treflex_disable(reflex_find_by_name(\"alias\", \"Kick\", true, false, \"consolidatedmonkcombos modified\"));\n} else if (monkKickPunch === \"PUNCH\") {\n    monkKickPunch = \"KICK\";\n    client.set_variable(\"monkKickPunch\", \"KICK\");\n\tdisplay_notice(`MONK COMBOS: Alias 'Kick' is now enabled!`, \"gold\", \"navy\");\n    //Enable Kick Alias\n\treflex_enable(reflex_find_by_name(\"alias\", \"Kick\", true, false, \"consolidatedmonkcombos modified\"));\n\t//Disable Punch Alias\n\treflex_disable(reflex_find_by_name(\"alias\", \"Punch\", true, false, \"consolidatedmonkcombos modified\")); \n};"}],"text":"monkpk"},{"type":"alias","name":"ComboTables","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\n// Combo Tables\n\n// Remember to replace these same tables that are in the onLoad function with any changes you make here or else they will change back on a new session until you run this alias agan.\n\n// Full Combo Tables\nclient.kickTableFull = {8:`wwk`, 5:`sdk`, 4:`mnk left`, 6:`mnk right`, 1:`snk left`, 3:`snk right`, 2:`swk`, 7:`rhk`, 9:`jpk`};\n\nclient.limbTableFull = {8:`ucp`, 5:`hkp`, 4:`spp left`, 6:`spp right`, 1:`hfp left`, 3:`hfp right`, 7:`jbp arms`, 9:`jbp head`};\n\nclient.stanceTable = {b:`brs`, c:`cts`, d:`drs`, e:`egs`, h:`hrs`, r:`rts`, s:`scs`};\n\nclient.commandTable = {a:`mind command apply restoration to arms`, e:`mind command apply restoration to ears`, h:`mind command apply restoration to head`, r:`mind command restore`, t:`mind command apply restoration to torso`};\n\n// Punch Table\nclient.limbTable = {8:`ucp @tar`, 5:`hkp @tar`, 4:`spp @tar left`, 6:`spp @tar right`, 1:`hfp @tar left`, 3:`hfp @tar right`, 7:`jbp @tar arms`, 9:`jbp @tar head`};\n\n// Kick Table\nclient.kickTable = {8:`wwk @tar`, 5:`sdk @tar`, 4:`mnk @tar left`, 6:`mnk @tar right`, 1:`snk @tar left`, 3:`snk @tar right`, 2:`swk @tar`, 7:`rhk @tar`, 9:`jpk @tar`};\n\ndisplay_notice(\"MONK COMBOS: Combo Tables set!\", \"gold\", \"navy\");"}],"text":"monkcombos"}],"description":"Modified version of Keorin's Consolidated Monk Combos"}