{"type":"group","name":"mining assistant","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":1809,"code":"'use strict';\n\nnextRoom = 0;\nnextRoomTundra = 0;\ncounterMines = 1;\ncounterLodes = 1;\ncounterData = 1;\nfinalData = [];\nfinalMines = [];\nfinalLodes = [];\n\nwalkToTundra = [10832, 10866, 10833, 10836, 10835, 10906, 10922, 10923, 10924, 11049, 10891, 10892, 10894, 10896, 10893, 10897, 10898, 10901, 10907, 13931, 10909, 10911, 13934, 10912, 14104, 10914, 10915];\n\n// Set default route\nif (!client.get_variable(\"walkToRoute\") || !client.get_variable(\"walkTo\")) {\n    send_command(\"maroute gra san vashcen dun vashs dak shamtw pashw pashe shamte sir mhocen mhosw\");\n    display_notice(`MINING ASSISTANT: Default Route Set!.`, \"#d0ff14\", \"#8b0000\");\n} else {\n    walkTo = client.get_variable(\"walkTo\");\n    walkToRoute = client.get_variable(\"walkToRoute\");\n    display_notice(`MINING ASSISTANT: Current route is ${walkToRoute}.`, \"#d0ff14\", \"#8b0000\");\n};\n\n\n// Set default lode size to stop if no custom size set\nif (!client.get_variable(\"stopAtSize\")) {\n    send_command(\"malodesize large\");\n    display_notice(`MINING ASSISTANT: No custom lode size to stop at detected, default set to Large.`, \"#d0ff14\", \"#8b0000\");\n} else {\n    stopAtSize = client.get_variable(\"stopAtSize\");\n    display_notice(`MINING ASSISTANT: Will stop prospecting at ${stopAtSize.toUpperCase()} lodes.`, \"#d0ff14\", \"#8b0000\");\n};\n\ndisplay_notice(`MINING ASSISTANT: To change these settings, refer to MALEGEND.`, \"#d0ff14\", \"#8b0000\");"},{"type":"function","name":"onGMCP","enabled":true,"id":1820,"code":"'use strict';\n\nif (args.gmcp_method === \"Room.Info\") {\n\n\t//Room Set\n\troomName = args.gmcp_args.name;\n    \n    //Room ID Set\n    roomID = args.gmcp_args.num;\n\n\t//Area Set\n\tcheckArea = args.gmcp_args.area;\n\t\n\t//Environment Set\n\tcheckEnviro = args.gmcp_args.environment;\n};"},{"type":"alias","name":"StartProspecting","enabled":true,"id":1810,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nif (checkArea === \"the frozen tundra\") {\n\tif (nextRoomTundra < walkTo.length && roomID !== walkToTundra[nextRoomTundra]) {\n    \t// Enable group 'ProspectTriggers'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t// Enable trigger 'ArrivedDestination'\n    \treflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n    \t// Enable trigger 'AlreadyMoving'\n    \treflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n    \n    \tsend_command(\"GOTO \" + walkToTundra[nextRoomTundra]);\n\n\t} else if (nextRoomTundra < walkToTundra.length && roomID === walkToTundra[nextRoomTundra]) {\n    \t// Enable group 'ProspectTriggers'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t// Enable group 'ProspectReflex'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    \n    \t// Prospect current room (will happen if continuing in the same room after stopped)\n    \tsetTimeout(function(){ send_command(\"PROSPECT\", true); }, 100);\n    \n\t} else if (nextRoomTundra >= walkToTundra.length) {\n\t\t// Disable group 'ProspectTriggers'\n    \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n\n    \tprint(\"Completed\");\n\t};\n    \n} else if (checkArea !== \"the frozen tundra\") {\n\n\tif (nextRoom < walkTo.length && roomID !== walkTo[nextRoom]) {\n    \t// Enable group 'ProspectTriggers'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t// Enable trigger 'ArrivedDestination'\n    \treflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n    \t// Enable trigger 'AlreadyMoving'\n    \treflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n    \n    \tsend_command(\"GOTO \" + walkTo[nextRoom]);\n\n\t} else if (nextRoom < walkTo.length && roomID === walkTo[nextRoom]) {\n    \t// Enable group 'ProspectTriggers'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t// Enable group 'ProspectReflex'\n\t\treflex_enable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    \n    \t// Prospect current room (will happen if continuing in the same room after stopped)\n    \tsetTimeout(function(){ send_command(\"PROSPECT\", true); }, 100);\n    \n\t} else if (nextRoom >= walkTo.length) {\n\t\t// Disable group 'ProspectTriggers'\n    \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n\n    \tprint(\"Completed\");\n\t};\n};"}],"text":"mapr"},{"type":"alias","name":"StopProspecting","enabled":true,"id":1822,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\n// Disable group 'ProspectTriggers'\nreflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n\n\nsend_command(\"STOP\", true);\nsend_command(\"CLEARQUEUE ALL\", true);"}],"text":"mastop"},{"type":"alias","name":"SetRoute","enabled":true,"id":1827,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nlet walkToAreas = {\n    // Sirrocian Mountains\n    sir: [2988, 2987, 2986, 2985, 2984, 2983, 2981, 3420, 3421, 3422, 3423, 3424, 2980, 2979, 2977, 2990, 2991, 2997, 3015, 3016, 28632, 3017, 3019, 3389, 3390, 3020, 3391, 3018],\n    // Shamtota Hills East\n    shamte: [1429, 1426, 1424, 1425, 1423, 1427, 1428, 1435, 1432, 1430, 1434, 1433],\n    // Pash Valley East\n    pashe: [1626, 1627, 1628, 1631, 1629, 1630, 1633, 1634, 1635, 1632],\n    // Pash Valley West\n    pashw: [1685, 1683, 1686, 1697, 1706, 1707, 1708, 1709, 1710, 1705, 1711, 1712, 1719, 1718, 1713, 1714, 1715, 5585, 4315, 1716, 1717, 1720, 1722, 1723, 1724, 1725, 1726],\n    // Shamtota Hills West\n    shamtw: [1619, 1728, 1727, 1729, 1490, 1436],\n    // Vashnar Mountains South\n    vashs: [10222, 10206, 10181, 10189, 10185, 10182, 10186, 10184, 10190, 10192, 10193, 10187, 10240, 10194, 10195, 10196, 10712, 10202, 10203, 10567, 10412, 10429, 10218, 10219, 10448, 10250, 10280, 38162, 35601, 35193, 10241, 10458, 10381, 10502, 10224, 10247, 10226, 10299, 10342, 10235, 13553, 10311],\n    // Mhojave Desert Central\n    mhocen: [1243, 1244, 1251, 1250, 1245, 1249, 1246, 1247, 1235, 1236, 1237, 356, 357, 358, 316, 318, 312, 311, 317, 310, 314, 346, 350, 354, 353, 352, 6587, 6629, 348, 349, 45863, 345, 344, 308, 307, 303, 306, 305, 304, 14790, 13778, 6164, 300, 301, 302, 309],\n    // Mhojave Desert Southwest\n    mhosw: [330, 355, 351, 347, 343, 333, 334, 335, 331],\n    // Dakhota Hills\n    dak: [1077, 1081, 1080, 1079, 1082, 1099, 1083, 1098, 1097, 1096, 1100, 1101, 1125, 1126, 1127, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1130, 1108, 1129, 1107, 1104, 1105, 1111, 1114, 1113, 1112, 1123, 1121, 1118, 1119, 1115, 1102, 1103, 1095, 1092, 1093, 1094, 1084, 1089, 1090, 1091, 1088],\n    // Vashnar Mountains Central\n    vashcen: [2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019],\n    // Dun Valley\n    dun: [5032, 5033, 5034, 5035, 5036, 3795, 3797, 3812, 3798, 3821, 3800, 3804, 3802, 3805, 3801, 3799],\n    // Granite Hills\n    gra: [9086, 9088, 9089, 9090, 9091, 9092, 9093, 9096, 9094, 9095, 9138, 9147, 9098, 9099, 9100, 9101, 9102, 9103, 9104, 9105, 9131, 9130, 9067, 9068, 9069, 9074, 9073, 9075, 9070, 9071, 9072, 9145, 9144, 9143, 9142, 9141, 9140, 9139, 18634, 19004, 11657, 11693],\n    // Sangre Plains\n    san: [7626, 7625, 7226, 7156, 7155, 7154, 7153],\n};\n\nlet areaOrderString = args[0].toLowerCase().split(' ');\nlet areaOrder = [];\nlet areaNewString = [];\nfor (let i = 1; i < areaOrderString.length; i++) {\n    \n    // Pretty-up the route display and check for input errors\n    switch(areaOrderString[i]) {  \n        case \"sir\":\n            areaNewString.push(\"Sirrocian Mountains\");\n            //print(areaNewString);\n        \tbreak;\n    \n    \tcase \"shamte\":\n            areaNewString.push(\"Shamtota Hills (East)\");\n            //print(areaNewString);\n        \tbreak;\n        \n    \tcase \"shamtw\":\n            areaNewString.push(\"Shamtota Hills (West)\");\n            //print(areaNewString);\n        \tbreak;\n        \n    \tcase \"pashe\":\n            areaNewString.push(\"Pash Valley (East)\");\n            //print(areaNewString);\n        \tbreak;\n        \n    \tcase \"pashw\":\n            areaNewString.push(\"Pash Valley (West)\");\n            //print(areaNewString); \n            break;\n\n    \tcase \"vashs\":\n            areaNewString.push(\"Vashnar Mountains (Southern)\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"vashcen\":\n            areaNewString.push(\"Vashnar Mountains (Central)\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"mhocen\":\n            areaNewString.push(\"Mhojave Desert (Central)\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"mhosw\":\n            areaNewString.push(\"Mhojave Desert (Southwest)\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"dak\":\n            areaNewString.push(\"Dakhota Hills\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"dun\":\n            areaNewString.push(\"Dun Valley\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"gra\":\n            areaNewString.push(\"Granite Hills\");\n            //print(areaNewString);\n        \tbreak;\n            \n        case \"san\":\n            areaNewString.push(\"Sangre Plains\");\n            //print(areaNewString);\n        \tbreak;\n        \n    \tdefault:\n        \tdisplay_notice(`MINING ASSISTANT: NOT A CORRECT INPUT!`, \"#d0ff14\", \"#8b0000\");\n            display_notice(`Please use sir, shamte, shamtw, pashe, pashw, vashs, vashcen, dak, mhocen, mhosw, dun, gra, or san.\\nTo see this list in greater detail, use MALEGEND.`, \"#d0ff14\", \"#8b0000\");\n            return;\n    };\n    \n    // Set new route\n    walkToAreas[areaOrderString[i]].forEach(area => areaOrder.push(area));\n};\nclient.set_variable(\"walkTo\", areaOrder);\nwalkTo = client.get_variable(\"walkTo\");\n//JSON.stringify(areaNewString)\nclient.set_variable(\"walkToRoute\", areaNewString.toString().replace(/,/g , ', '));\nwalkToRoute = client.get_variable(\"walkToRoute\");\ndisplay_notice(`MINING ASSISTANT: Route set to ${walkToRoute}.`, \"#d0ff14\", \"#8b0000\");"}],"text":"^maroute (.+)$"},{"type":"alias","name":"SetLodeDetection","enabled":true,"id":1825,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"'use strict';\n\nvar setSize = args[1].toLowerCase();\n\nswitch(setSize) {  \n    case \"tiny\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} OR LARGER LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;\n    \n    case \"small\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} OR LARGER LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;\n        \n    case \"medium\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} OR LARGER LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;\n        \n    case \"large\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} OR LARGER LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;\n        \n    case \"huge\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} OR LARGER LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;      \n\n    case \"massive\":\n        client.set_variable(\"stopAtSize\", setSize);\n        stopAtSize = client.get_variable(\"stopAtSize\");\n        display_notice(`MINING ASSISTANT: WILL STOP PROSPECTING AT ${setSize.toUpperCase()} LODES!`, \"#d0ff14\", \"#8b0000\");\n        break;\n        \n    default:\n        display_notice(`MINING ASSISTANT: NOT A CORRECT INPUT! PLEASE USE TINY, SMALL, MEDIUM, LARGE, HUGE, OR MASSIVE!`, \"#d0ff14\", \"#8b0000\");\n};"}],"text":"^malodesize (\\w+)$"},{"type":"alias","name":"LodeReporting","enabled":true,"id":1842,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//print(pr_area);\n//print(pr_lode_size);\n//print(pr_lode_type);\n\nsend_command(\"CLT8 \" + pr_lode_size + \" \" + pr_lode_type + \" in \" + pr_area + \" at \" + pr_roomName + \" (\" + pr_roomID + \")\");"}],"text":"loderep","items":[]},{"type":"trigger","name":"MineCollection","enabled":true,"id":1804,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^There is a (\\w+) (.+) mine here on a (\\w+) lode that you\\'d guess is approximately (\\d+)% mined out\\.$","actions":[{"action":"script","script":"'use strict';\n\nmineInfo = {\n  commodity: \"\",\n  mineSize: \"\",\n  lodeSize: \"\",\n  miningStatus: 0,\n  owner: \"\",\n  city: \"\",\n  area: \"\",\n  room: \"\",\n  environment: \"\",\n};\n\nmineInfo.commodity = args[2]\nmineInfo.mineSize = args[1];\nmineInfo.lodeSize = args[3];\nmineInfo.miningStatus = args[4];\nmineInfo.area = checkArea;\nmineInfo.room = `${roomName} (${roomID})`;\nmineInfo.environment = checkEnviro;\n\nsend_command(\"READ SIGN\", true);"},{"action":"waitfor","text":"^This (\\w+) (.+) mine is owned by (\\w+)\\.$","matching":"regexp","whole_words":true,"case_sensitive":true,"expire":"6"},{"action":"script","script":"'use strict';\n\n//let mineData = JSON.stringify(mineInfo);\n//print('mineData ' + mineData);\nmineInfo.owner = args[3];\nmineInfo.city = cdb_get_city(args[3]).charAt(0).toUpperCase() + cdb_get_city(args[3]).slice(1);\n\n\nlet mineString = `${counterMines}: ${mineInfo.commodity}, ${mineInfo.mineSize} mine, ${mineInfo.lodeSize} lode, ${mineInfo.miningStatus}%, ${mineInfo.owner}, ${mineInfo.city}, ${mineInfo.area}, ${mineInfo.room}, ${mineInfo.environment} environment.`;\n//print('mineString ' + mineString);\n\nfinalMines.push(mineString);\ncounterMines++;\n\n// Makes entire string Uppercase\n//$.each(finalMine, function(index, item) {\n//    finalMine[index] = item.toUpperCase();\n//});\n\n//print('finalMine ' + finalMines);"}],"items":[]},{"type":"trigger","name":"LodeCollection","enabled":true,"id":1826,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You determine that there is a (\\w+) lode of (.+) here\\.$","actions":[{"action":"script","script":"'use strict';\n\nlodeInfo = {\n  commodity: \"\",\n  lodeSize: \"\",\n  area: \"\",\n  room: \"\",\n};\n\nlodeInfo.lodeSize = args[1];\nlodeInfo.commodity = args[2];\nlodeInfo.area = checkArea;\nlodeInfo.room = `${roomName} (${roomID})`;\n\nlet lodeString = `${counterLodes}: ${lodeInfo.commodity}, ${lodeInfo.lodeSize} lode, ${lodeInfo.area}, ${lodeInfo.room}.`;\n//print('lodeString ' + lodeString);\n\nfinalLodes.push(lodeString);\ncounterLodes++;"}]},{"type":"trigger","name":"LodeTrack","enabled":true,"id":1841,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You determine that there is a (\\w+) lode of (.+) here\\.$","actions":[{"action":"script","script":"'use strict';\n\npr_area = checkArea.replace(/\\b\\w/g, l => l.toUpperCase());\npr_lode_size = args[1].charAt(0).toUpperCase() + args[1].slice(1);\npr_lode_type = args[2].replace(/\\b\\w/g, l => l.toUpperCase());\npr_roomName = roomName;\npr_roomID = roomID;"}],"items":[]},{"type":"group","name":"ProspectTriggers","enabled":false,"id":1812,"items":[{"type":"group","name":"ProspectReflex","enabled":true,"id":1824,"items":[{"type":"trigger","name":"ProspectReflex1","enabled":true,"id":1813,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You are enough of a prospector to realise there is no lode here and no point looking for one\\.$","actions":[{"action":"waitfor","text":"You have recovered balance on all limbs.","matching":"exact","whole_words":true,"case_sensitive":true,"expire":"10"},{"action":"script","script":"'use strict';\n\nfunction movementMain() {\n    // Disable group 'ProspectReflex'\n    reflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    // Enable trigger 'ArrivedDestination'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n    // Enable trigger 'AlreadyMoving'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n    // Walk to next room\n    send_command(\"GOTO \" + walkTo[nextRoom]);\n    //setTimeout(function(){ send_command(\"GOTO \" + walkTo[nextRoom]); }, 280);\n};\n\nfunction movementTundra() {\n    // Disable group 'ProspectReflex'\n\treflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'ArrivedDestination'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'AlreadyMoving'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n\t// Walk to next room\n\tsend_command(\"GOTO \" + walkToTundra[nextRoomTundra]);\n\t//setTimeout(function(){ send_command(\"GOTO \" + walkToTundra[nextRoomTundra]); }, 280);\n};\n\n// Prospecting main areas\nif (checkArea !== \"the frozen tundra\") {\n    nextRoom++;\n    if (nextRoom < walkTo.length) {\n        if (roomID !== walkTo[nextRoom]) {\n        \tmovementMain();\n        \n    \t} else if (roomID === walkTo[nextRoom]) {\n        \tnextRoom++;\n        \tmovementMain();\n        };\n    \n    } else if (nextRoom >= walkTo.length) {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\tprint(\"COMPLETED!\");\n\t\t\tnextRoom = 0;\n    } else {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \tprint(\"Something went wrong.\");\n    };\n\n// Prospecting Tundra\n} else if (checkArea === \"the frozen tundra\") {\n    nextRoomTundra++;\n    if (nextRoomTundra < walkToTundra.length) {\n        if (roomID !== walkToTundra[nextRoomTundra]) {\n            movementTundra();\n\n        } else if (roomID === walkToTundra[nextRoomTundra]) {\n        \tnextRoomTundra++;\n        \tmovementTundra();\n        };\n        \n    } else if (nextRoomTundra >= walkToTundra.length) {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \tprint(\"COMPLETED!\");\n\t\tnextRoomTundra = 0;\n    } else {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        print(\"Something went wrong.\");\n    };\n};"}]},{"type":"trigger","name":"ProspectReflex2","enabled":true,"id":1818,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^There is a (\\w+) (.+) mine here on a (\\w+) lode that you\\'d guess is approximately (\\d+)\\% mined out\\.$","actions":[{"action":"waitfor","text":"You have recovered balance on all limbs.","matching":"exact","whole_words":true,"case_sensitive":true,"expire":"10"},{"action":"script","script":"'use strict';\n\nfunction movementMain() {\n    // Disable group 'ProspectReflex'\n    reflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    // Enable trigger 'ArrivedDestination'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n    // Enable trigger 'AlreadyMoving'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n    // Walk to next room\n    send_command(\"GOTO \" + walkTo[nextRoom]);\n    //setTimeout(function(){ send_command(\"GOTO \" + walkTo[nextRoom]); }, 280);\n};\n\nfunction movementTundra() {\n    // Disable group 'ProspectReflex'\n\treflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'ArrivedDestination'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'AlreadyMoving'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n\t// Walk to next room\n\tsend_command(\"GOTO \" + walkToTundra[nextRoomTundra]);\n\t//setTimeout(function(){ send_command(\"GOTO \" + walkToTundra[nextRoomTundra]); }, 280);\n};\n\n// Prospecting main areas\nif (checkArea !== \"the frozen tundra\") {\n    nextRoom++;\n    if (nextRoom < walkTo.length) {\n        if (roomID !== walkTo[nextRoom]) {\n        \tmovementMain();\n        \n    \t} else if (roomID === walkTo[nextRoom]) {\n        \tnextRoom++;\n        \tmovementMain();\n        };\n    \n    } else if (nextRoom >= walkTo.length) {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\tprint(\"COMPLETED!\");\n\t\t\tnextRoom = 0;\n    } else {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \tprint(\"Something went wrong.\");\n    };\n\n// Prospecting Tundra\n} else if (checkArea === \"the frozen tundra\") {\n    nextRoomTundra++;\n    if (nextRoomTundra < walkToTundra.length) {\n        if (roomID !== walkToTundra[nextRoomTundra]) {\n            movementTundra();\n\n        } else if (roomID === walkToTundra[nextRoomTundra]) {\n        \tnextRoomTundra++;\n        \tmovementTundra();\n        };\n        \n    } else if (nextRoomTundra >= walkToTundra.length) {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \tprint(\"COMPLETED!\");\n\t\tnextRoomTundra = 0;\n    } else {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        print(\"Something went wrong.\");\n    };\n};"}]},{"type":"trigger","name":"ProspectReflex3","enabled":true,"id":1819,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You determine that there is a (\\w+) lode of (.+) here\\.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ecc0ff","highlight_bg":"#000000"},{"action":"script","script":"// Set size of the lode to a global variable before Wait For occurs\nmaLodeSize = args[1];\n\n// Set lode type to a global variable before Wait For occurs\nmaLodeType = args[2];"},{"action":"waitfor","text":"You have recovered balance on all limbs.","matching":"exact","whole_words":true,"case_sensitive":true,"expire":"10"},{"action":"script","script":"'use strict';\n\n//Current size detection\nvar checkSize = stopAtSize;\n\nfunction movementMain() {\n    // Disable group 'ProspectReflex'\n    reflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    // Enable trigger 'ArrivedDestination'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n    // Enable trigger 'AlreadyMoving'\n    reflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n    // Walk to next room\n    send_command(\"GOTO \" + walkTo[nextRoom]);\n    //setTimeout(function(){ send_command(\"GOTO \" + walkTo[nextRoom]); }, 280);\n};\n\nfunction movementTundra() {\n    // Disable group 'ProspectReflex'\n\treflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'ArrivedDestination'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n\t// Enable trigger 'AlreadyMoving'\n\treflex_enable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\n\t// Walk to next room\n\tsend_command(\"GOTO \" + walkToTundra[nextRoomTundra]);\n\t//setTimeout(function(){ send_command(\"GOTO \" + walkToTundra[nextRoomTundra]); }, 280);\n};\n\nswitch(checkSize) {\n    // If Lode Size to stop at set to tiny\n    case \"tiny\":\n        if (maLodeSize === \"tiny\" ||\n            maLodeSize === \"small\" ||\n            maLodeSize === \"medium\" ||\n            maLodeSize === \"large\" ||\n            maLodeSize === \"huge\" ||\n            maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            \tif (roomID === walkTo[nextRoom]) {\n                \tnextRoom++;\n    \t\t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++\n                }\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;\n    // If Lode Size to stop at set to small\n    case \"small\":\n        if (maLodeSize === \"small\" ||\n            maLodeSize === \"medium\" ||\n            maLodeSize === \"large\" ||\n            maLodeSize === \"huge\" ||\n            maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            if (roomID === walkTo[nextRoom]) {\n                nextRoom++;\n    \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\tnextRoomTundra++\n    \t\t}\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;\n    \n    // If Lode Size to stop at set to medium\n    case \"medium\":\n        if (maLodeSize === \"medium\" ||\n            maLodeSize === \"large\" ||\n            maLodeSize === \"huge\" ||\n            maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            if (roomID === walkTo[nextRoom]) {\n                nextRoom++;\n    \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\tnextRoomTundra++\n    \t\t}\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;\n       \n    // If Lode Size to stop at set to large\n    case \"large\":\n        if (maLodeSize === \"large\" ||\n            maLodeSize === \"huge\" ||\n            maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            if (roomID === walkTo[nextRoom]) {\n                nextRoom++;\n    \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\tnextRoomTundra++\n    \t\t}\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;\n    \n    // If Lode Size to stop at set to huge\n    case \"huge\":\n        if (maLodeSize === \"huge\" ||\n            maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            if (roomID === walkTo[nextRoom]) {\n                nextRoom++;\n    \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\tnextRoomTundra++\n    \t\t}\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;      \n\n    // If Lode Size to stop at set to massive\n    case \"massive\":\n        if (maLodeSize === \"massive\" ||\n            maLodeType === \"carbon\" ||\n            maLodeType === \"gold ore\" ||\n            maLodeType === \"silver ore\" ||\n            maLodeType === \"raw gems\" ||\n            maLodeType === \"impure ice\" ||\n            maLodeType === \"raw obsidian\" ||\n            maLodeType === \"raw stone\" ||\n            maLodeType === \"raw bone\") {\n            // Disable group 'ProspectTriggers'\n    \t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n    \t\tdisplay_notice(`MINING ASSISTANT: A ${maLodeSize.toUpperCase()} LODE OF ${maLodeType.toUpperCase()} HAS BEEN DETECTED, STOPPING AT THIS LOCATION!`, \"#d0ff14\", \"#8b0000\");\n            if (roomID === walkTo[nextRoom]) {\n                nextRoom++;\n    \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\tnextRoomTundra++\n    \t\t}\n        } else if (checkArea !== \"the frozen tundra\") {\n            if (nextRoom < walkTo.length) {\n                if (roomID !== walkTo[nextRoom]) {\n        \t\t\tmovementMain();\n        \n                } else if (roomID === walkTo[nextRoom]) {\n        \t\t\tnextRoom++;\n        \t\t\tmovementMain();\n    \n        \t\t} else if (nextRoom >= walkTo.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoom = 0;\n        \n    \t\t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n                }\n            }\n        } else if (checkArea === \"the frozen tundra\") {\n            if (nextRoomTundra < walkToTundra.length) {\n            \tif (roomID !== walkToTundra[nextRoomTundra]) {\n        \t\t\tmovementTundra();\n            \n        \t\t} else if (roomID === walkToTundra[nextRoomTundra]) {\n        \t\t\tnextRoomTundra++;\n        \t\t\tmovementTundra();\n        \n        \t\t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n    \t\t\t\tprint(\"COMPLETED!\");\n\t\t\t\t\tnextRoomTundra = 0;\n            \n        \t\t} else {\n        \t\t\t// Disable group 'ProspectTriggers'\n        \t\t\treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t\t\tprint(\"Something went wrong.\");\n        \t\t}\n            }\n        }\n        break;\n        \n    default:\n        display_notice(`MINING ASSISTANT: SOMETHING WENT WRONG!`, \"#d0ff14\", \"#8b0000\");\n        return;\n};"}]}],"actions":[]},{"type":"trigger","name":"ArrivedDestination","enabled":false,"id":1814,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You have arrived at your destination!","actions":[{"action":"script","script":"'use strict';\n\nfunction prospect() {\n    // Enable group 'ProspectReflex'\n    reflex_enable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n    // Disable trigger 'ArrivedDestination'\n    reflex_disable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n\n    // Prospect current room\n    //setTimeout(function(){ send_command(\"PROSPECT\", true); }, 50);\n    send_command(\"PROSPECT\", true);\n};\n\n\n// Prospecting main areas\nif (checkArea !== \"the frozen tundra\") {\n\tif (roomID === walkTo[nextRoom]) {\n    \tif (nextRoom < walkTo.length) {\n        \tprospect();\n\n    \t} else if (nextRoom >= walkTo.length) {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t// Prospect final room and end\n        \tsetTimeout(function(){ send_command(\"PROSPECT\", true); }, 50);\n        \tsetTimeout(function(){ print(\"COMPLETED!\"); }, 1000);\n        \tnextRoom = 0;\n    \t} else {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \tprint(\"Something went wrong.\");\n    \t};\n        \n    } else if (nextRoom >= walkTo.length) {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        // Prospect final room and end\n        //setTimeout(function(){ send_command(\"PROSPECT\", true); }, 100);\n        setTimeout(function(){ print(\"COMPLETED!\"); }, 1000);\n        nextRoom = 0;\n    };\n    \n    // Prospecting in Tundra\n} else if (checkArea === \"the frozen tundra\") {\n    if (roomID === walkToTundra[nextRoomTundra]) {\n        if (nextRoomTundra < walkToTundra.length) {\n        \tprospect();\n\n    \t} else if (nextRoomTundra >= walkToTundra.length) {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \t// Prospect final room and end\n        \tsetTimeout(function(){ send_command(\"PROSPECT\", true); }, 50);\n        \tsetTimeout(function(){ print(\"COMPLETED!\"); }, 1000);\n        \tnextRoomTundra = 0;\n    \t} else {\n        \t// Disable group 'ProspectTriggers'\n        \treflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        \tprint(\"Something went wrong.\");\n    \t};\n    \n    } else if (nextRoomTundra >= walkToTundra.length) {\n        // Disable group 'ProspectTriggers'\n        reflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n        \n        // Prospect final room and end\n        //setTimeout(function(){ send_command(\"PROSPECT\", true); }, 100);\n        setTimeout(function(){ print(\"COMPLETED!\"); }, 1000);\n        nextRoomTundra = 0;\n    };\n};"}]},{"type":"trigger","name":"AlreadyMoving","enabled":true,"id":1817,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are already traversing to a location. If you wish to cancel your movement, please CLICK HERE.","actions":[{"action":"gag"},{"action":"wait","seconds":0,"milliseconds":"10"},{"action":"script","script":"'use strict';\n\nlet checkMovement = roomID;\n\n// Main\nif (checkArea !== \"the frozen tundra\") {\n    // If movement has stopped and not at next room, will continue movement\n    if (roomID === checkMovement && roomID !== walkTo[nextRoom]) {\n        send_command(\"GOTO \" + walkTo[nextRoom]);\n        //setTimeout(function(){ send_command(\"GOTO \" + walkTo[nextRoom]); }, 200);\n    };\n    \n// Tundra  \n} else {\n    // If movement has stopped and not at next room, will continue movement\n    if (roomID === checkMovement && roomID !== walkToTundra[nextRoomTundra]) {\n        send_command(\"GOTO \" + walkToTundra[nextRoomTundra]);\n        //setTimeout(function(){ send_command(\"GOTO \" + walkToTundra[nextRoomTundra]); }, 200);\n    }\n};"}]},{"type":"trigger","name":"TooFarAway","enabled":true,"id":1821,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"I'm sorry, but you are too far away from that location to walk there automatically.","actions":[{"action":"script","script":"// Disable group 'ProspectTriggers'\nreflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n\ndisplay_notice(\"MINING ASSISTANT: TOO FAR! PLEASE MOVE CLOSER TO YOUR STARTING POINT!\", \"#d0ff14\", \"#8b0000\");"}]},{"type":"group","name":"Gags","enabled":true,"id":1847,"items":[{"type":"trigger","name":"","enabled":true,"id":1848,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You must regain balance first.","actions":[{"action":"gag"}]}],"actions":[]}],"actions":[]},{"type":"group","name":"RoomID Collection","enabled":false,"id":1808,"items":[{"type":"trigger","name":"RoomCollect1","enabled":true,"id":1807,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^There is a (\\w+) (.+) mine here on a (\\w+) lode that you\\'d guess is approximately (\\d+)\\% mined out\\.$","actions":[{"action":"script","script":"roomInfo = {\n  area: \"\",\n  room: \"\",\n  environment: \"\",\n};\n\nmineInfo.area = checkArea;\nmineInfo.room = `${roomName} (${roomID})`;\nmineInfo.environment = checkEnviro;\n\nlet dataString = `${counterData}: ${mineInfo.area}, ${mineInfo.room}, ${mineInfo.environment} environment.`;\n\nfinalData.push(dataString);\ncounterData++;"}]},{"type":"trigger","name":"RoomCollect2","enabled":true,"id":1806,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are enough of a prospector to realise there is no lode here and no point looking for one.","actions":[{"action":"script","script":"roomInfo = {\n  area: \"\",\n  room: \"\",\n  environment: \"\",\n};\n\nmineInfo.area = checkArea;\nmineInfo.room = `${roomName} (${roomID})`;\nmineInfo.environment = checkEnviro;\n\nlet dataString = `${counterData}: ${mineInfo.area}, ${mineInfo.room}, ${mineInfo.environment} environment.`;\n\nfinalData.push(dataString);\ncounterData++;"}]},{"type":"trigger","name":"RoomCollect3","enabled":true,"id":1805,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You determine that there is a (\\w+) lode of (.+) here\\.$","actions":[{"action":"script","script":"roomInfo = {\n  area: \"\",\n  room: \"\",\n  environment: \"\",\n};\n\nmineInfo.area = checkArea;\nmineInfo.room = `${roomName} (${roomID})`;\nmineInfo.environment = checkEnviro;\n\nlet dataString = `${counterData}: ${mineInfo.area}, ${mineInfo.room}, ${mineInfo.environment} environment.`;\n\nfinalData.push(dataString);\ncounterData++;"}]}],"actions":[]},{"type":"group","name":"Strongholds","enabled":true,"id":1828,"items":[{"type":"alias","name":"DakhotaHills","enabled":true,"id":1830,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 1106","prefix_suffix":true}],"text":"mine2","items":[]},{"type":"alias","name":"DunValley","enabled":true,"id":1834,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 3796","prefix_suffix":true}],"text":"mine6","items":[]},{"type":"alias","name":"GraniteHills1","enabled":true,"id":1836,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 9146","prefix_suffix":true}],"text":"mine8","items":[]},{"type":"alias","name":"GraniteHills2","enabled":true,"id":1837,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 9097","prefix_suffix":true}],"text":"mine9","items":[]},{"type":"alias","name":"MhojaveDesert","enabled":true,"id":1829,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 315","prefix_suffix":true}],"text":"mine1","items":[]},{"type":"alias","name":"PashValley","enabled":true,"id":1832,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 1721","prefix_suffix":true}],"text":"mine4","items":[]},{"type":"alias","name":"ShamtotaHills","enabled":true,"id":1831,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 1431","prefix_suffix":true}],"text":"mine3","items":[]},{"type":"alias","name":"Sirrocian","enabled":true,"id":1835,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 2982","prefix_suffix":true}],"text":"mine7","items":[]},{"type":"alias","name":"VashnarSouth1","enabled":true,"id":1838,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 10409","prefix_suffix":true}],"text":"mine10","items":[]},{"type":"alias","name":"VashnarSouth2","enabled":true,"id":1839,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 10295","prefix_suffix":true}],"text":"mine11","items":[]},{"type":"alias","name":"VashnarCentral","enabled":true,"id":1833,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 2014","prefix_suffix":true}],"text":"mine5","items":[]},{"type":"alias","name":"FrozenTundra","enabled":true,"id":1845,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 11254","prefix_suffix":true}],"text":"mine12"},{"type":"alias","name":"FissureOfEchoes","enabled":true,"id":1846,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"GOTO 20259","prefix_suffix":true}],"text":"mine13"}],"actions":[]},{"type":"alias","name":"","enabled":true,"id":1811,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"print(\"VALUES RESET!\");\n\nnextRoom = 0;\nnextRoomTundra = 0;\ncounterMines = 1;\ncounterData = 1;\ncounterLodes = 1;\n\n// Disable group 'ProspectTriggers'\nreflex_disable(reflex_find_by_name(\"group\", \"ProspectTriggers\", true, false, \"Mining assistant\"));\n// Disable group 'ProspectReflex'\nreflex_disable(reflex_find_by_name(\"group\", \"ProspectReflex\", true, false, \"Mining assistant\"));\n// Disable trigger 'ArrivedDestination'\nreflex_disable(reflex_find_by_name(\"trigger\", \"ArrivedDestination\", true, false, \"Mining assistant\"));\n// Disable trigger 'AlreadyMoving'\nreflex_disable(reflex_find_by_name(\"trigger\", \"AlreadyMoving\", true, false, \"Mining assistant\"));\n\nfinalMines.splice(0, finalMines.length);\nfinalData.splice(0, finalData.length);\nfinalLodes.splice(0, finalLodes.length);"}],"text":"reset"},{"type":"alias","name":"","enabled":true,"id":1816,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"print(\"nextRoom \" + nextRoom);\nprint(\"nextRoomTundra \" + nextRoomTundra);\nprint(\"walkTo Length \" + walkTo.length);\nprint(\"walkToTundra Length \" + walkToTundra.length);\nprint(\"roomID \" + roomID);\nprint(\"walkTo[nextRoom] \" + walkTo[nextRoom]);\nprint(\"walkTo[nextRoomTundra] \" + walkToTundra[nextRoomTundra]);\nprint(\"area \" + checkArea);\nprint(client.get_variable(\"stopAtSize\"));\n\nprint(\"counterMines \" + counterMines);\nfor (let i = 0; i < finalMines.length; i++) {\nprint(finalMines[i]);\n};\n\nprint(\"counterData \" + counterData);\nfor (let i = 0; i < finalData.length; i++) {\nprint(finalData[i]);\n};\n\nprint(\"counterLodes \" + counterLodes);\nfor (let i = 0; i < finalLodes.length; i++) {\nprint(finalLodes[i]);\n};"}],"text":"vals"},{"type":"alias","name":"FullRoute1","enabled":true,"id":1843,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command(\"maroute sir shamte pashe pashw shamtw vashs mhocen mhosw dak vashcen dun gra san\");"}],"text":"route1"},{"type":"alias","name":"FullRoute2","enabled":true,"id":1844,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command(\"maroute sir shamte pashe pashw shamtw vashs dak vashcen dun gra san mhocen mhosw\");"}],"text":"route2"}],"description":"prospecting, lode reporting, information collection"}